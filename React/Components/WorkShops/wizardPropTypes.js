import PropTypes from 'prop-types';

const wizardPropTypes = {
    workshopFormData: PropTypes.shape({
        name: PropTypes.string.isRequired,
        summary: PropTypes.string.isRequired,
        shortDescription: PropTypes.string.isRequired,
        venueId: PropTypes.string.isRequired,
        workShopTypeId: PropTypes.string.isRequired,
        workShopStatusId: PropTypes.string.isRequired,
        languageId: PropTypes.string.isRequired,
        imageUrl: PropTypes.string.isRequired,
        externalSiteUrl: PropTypes.string.isRequired,
        isFree: PropTypes.bool.isRequired,
        numberOfSessions: PropTypes.number.isRequired,
        dateStart: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,
        dateEnd: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,
    }),

    values: PropTypes.shape({
        name: PropTypes.string.isRequired,
        summary: PropTypes.string.isRequired,
        shortDescription: PropTypes.string.isRequired,
        venueId: PropTypes.string.isRequired,
        workShopTypeId: PropTypes.string.isRequired,
        workShopStatusId: PropTypes.string.isRequired,
        languageId: PropTypes.string.isRequired,
        imageUrl: PropTypes.string.isRequired,
        externalSiteUrl: PropTypes.string.isRequired,
        isFree: PropTypes.bool.isRequired,
        numberOfSessions: PropTypes.number.isRequired,
        dateStart: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,
        dateEnd: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,
    }),
    touched: PropTypes.shape({
        name: PropTypes.bool,
        summary: PropTypes.bool,
        shortDescription: PropTypes.bool,
        venueId: PropTypes.bool,
        workShopTypeId: PropTypes.bool,
        workShopStatusId: PropTypes.bool,
        languageId: PropTypes.bool,
        imageUrl: PropTypes.bool,
        externalSiteUrl: PropTypes.bool,
        isFree: PropTypes.bool,
        numberOfSessions: PropTypes.bool,
        dateStart: PropTypes.bool,
        dateEnd: PropTypes.bool,
    }),
    errors: PropTypes.shape({
        name: PropTypes.string,
        summary: PropTypes.string,
        shortDescription: PropTypes.string,
        venueId: PropTypes.string,
        workShopTypeId: PropTypes.string,
        workShopStatusId: PropTypes.string,
        languageId: PropTypes.string,
        imageUrl: PropTypes.string,
        externalSiteUrl: PropTypes.string,
        isFree: PropTypes.bool,
        numberOfSessions: PropTypes.number,
        dateStart: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),
        dateEnd: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),

    }),
    handleChange: PropTypes.func.isRequired,
    handleBlur: PropTypes.func.isRequired,
    handleSubmit: PropTypes.func.isRequired,
    onChange: PropTypes.func.isRequired,
    nextLabel: PropTypes.string,
    backLabel: PropTypes.string,
    onBack: PropTypes.func.isRequired,
    onNext: PropTypes.func.isRequired,
    isSubmitting: PropTypes.bool.isRequired,
    cantBack: PropTypes.bool.isRequired,
};

export { wizardPropTypes };
