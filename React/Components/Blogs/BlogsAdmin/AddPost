import React, {useEffect, useState} from "react";
import debug from "sabio-debug";
import {Formik, Form, Field, ErrorMessage} from "formik";
import blogSchema from "../../../schema/blogAdminSchema";
import * as blogAdminService from "../../../services/blogAdminService";
import lookup from "../../../services/lookupService";
import toastr from "../../../utils/toastr";
const _logger = debug.extend("adding new blog");

const AddPost = () => {
    const [blogContent, setBlogContent] = useState({
        typeId: '',
        title: '',
        subject: '',
        content: '',
        isPublished: false,
        imageUrl: '',
        datePublished: '',
        statusId: '',
    });
    _logger(blogContent, setBlogContent);

    const [typeContent, setTypeContent] = useState ([]);
    const [statusContent, setStatusContent] = useState ([]);

    useEffect(() => {
            lookup(["BlogTypes" , "BlogStatus"])
            .then(onLookupSuccess)
            .catch(onLookupError);
    }, []);

    const onLookupSuccess = (response) => {
        _logger(response, "Lookup table works")

        setTypeContent((prevState) => {
            let newType = {...prevState};
            newType = response.item.blogTypes;

            return newType;
        });

        setStatusContent((prevState) => {
            let newType = {...prevState};
            newType = response.item.blogStatus;

            return newType;
        });

    };

    const onLookupError = (response) => {
        _logger(response, "error retrieving lookup table")
    };

    const mapType = (type, index) => (
        <option 
         value={type.id}
         key={`${type}_${index}`}
        >{type.name}
        </option>
    );
    _logger(mapType);

    const handleSubmit = (values) => {
        _logger(values, 'success submit');

        blogAdminService.add(values).then(onAddSuccess).catch(onAddError);

        toastr.success("New Post Created!");
     
    };

    const onAddSuccess = (response) => {
        _logger(response, "successsfully created a new post")

        window.location.replace('/blogsadmin')
    };

    const onAddError = (response) => {
        _logger(response, 'error when creating a new post');
    };



    return (
        <React.Fragment>
            <div className="container-fluid">
                <div className="row">
                    <div className="col-6">
                        <Formik
                            enableReinitialize={true}
                            initialValues={blogContent}
                            onSubmit={handleSubmit}
                            validationSchema={blogSchema}>
                            <Form>
                                <div className="form-group">
                                    <label htmlFor="typeId">Type</label>
                                    <Field component="select" name="typeId" className="form-control">
                                        <option value="">Select a type of Blog</option>
                                        {typeContent.map(mapType)}
                                    </Field>
                                </div>
                                <div className="form-group">
                                    <label htmlFor="statusId">Status</label>
                                    <Field component="select" name="statusId" className="form-control">
                                        <option value="">Select a Status</option>
                                        {statusContent.map(mapType)}
                                    </Field>
                                </div>
                                <div className="form-group">
                                    <label htmlFor="title">Title</label>
                                    <Field type="text" name="title" className="form-control" />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="subject">Subject</label>
                                    <Field type="text" name="subject" className="form-control" />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="content">Content</label>
                                    <Field component="textarea" type="text" name="content" className="form-control" />
                                    <ErrorMessage name="content" component="div" className="has-error" />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="imageUrl">New Post ImageUrl</label>
                                    <Field type="text" name="imageUrl" className="form-control" />
                                </div>
                                <br />
                                <div className="form-group">
                                    <label htmlFor="datePublished">Date Publish</label>
                                    <Field type="date" name="datePublished" className="form-control" />
                                </div>
                                <br />
                                <div className="form-check">
                                    <Field type="checkbox" name="isPublished" className="form-check-input" />
                                    <label htmlFor="isPublished" className="form-check-label">
                                        Will this Post be publish yet?
                                    </label>
                                </div>
                                <br />
                                <div>
                                    <button type="submit"
                                        className="btn btn-success ms-2 me-2">
                                        Add Post
                                    </button>
                                </div>
                            </Form>
                        </Formik>
                    </div>
                </div>
            </div>
        </React.Fragment>  
    );    
}; 


export default AddPost; 
